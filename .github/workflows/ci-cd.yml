name: "Flask App - Terraform + Docker + Azure Deploy"

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Login to Azure using JSON credentials"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Set up Terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5

      - name: "Terraform Init & Apply"
        run: |
          terraform init -input=false
          terraform apply -auto-approve -input=false

      - name: "Extract ACR credentials"
        run: |
          ACR_NAME=$(terraform output -raw acr_login_server | cut -d'.' -f1)
          CREDS=$(az acr credential show --name $ACR_NAME --query "{username:username,password:passwords[0].value}" -o json)
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          echo "ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)" >> $GITHUB_ENV
          echo "ACR_USERNAME=$(echo $CREDS | jq -r '.username')" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$(echo $CREDS | jq -r '.password')" >> $GITHUB_ENV

      - name: "Build & Push Docker image to ACR"
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker login $ACR_LOGIN_SERVER -u $ACR_USERNAME -p $ACR_PASSWORD
          docker build -t $ACR_LOGIN_SERVER/flask-app:${IMAGE_TAG} .
          docker push $ACR_LOGIN_SERVER/flask-app:${IMAGE_TAG}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: "Deploy new image to Azure Web App"
        run: |
          az webapp config container set \
            --name flask-web-app-12345 \
            --resource-group flask-rg \
            --docker-custom-image-name $ACR_LOGIN_SERVER/flask-app:${IMAGE_TAG} \
            --docker-registry-server-url https://$ACR_LOGIN_SERVER \
            --docker-registry-server-user $ACR_USERNAME \
            --docker-registry-server-password $ACR_PASSWORD
